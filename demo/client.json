 Client {
  connection: Connection {
    stream: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      [Symbol(asyncId)]: 12,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: true,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _options: { objectMode: true },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: false,
      ended: false,
      endEmitted: false,
      reading: true,
      calledRead: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      objectMode: true,
      defaultEncoding: 'utf8',
      ranOut: false,
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Function],
      finish: [Function (anonymous)],
      data: [Function: emitPacket],
      readable: [Function (anonymous)],
      error: [Function: handleError],
      puback: [Function (anonymous)],
      pingreq: [Function (anonymous)],
      subscribe: [Function (anonymous)],
      publish: [Function (anonymous)],
      unsubscribe: [Function (anonymous)],
      disconnect: [Function (anonymous)],
      close: [Function (anonymous)]
    },
    _eventsCount: 12,
    _maxListeners: undefined,
    _writableState: WritableState {
      highWaterMark: 16384,
      objectMode: true,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function (anonymous)],
      writecb: null,
      writelen: 0,
      buffer: [],
      errorEmitted: false
    },
    writable: true,
    allowHalfOpen: true,
    _writable: DestroyableTransform {
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _transformState: [TransformState],
      _destroyed: false,
      _transform: [Function: process],
      [Symbol(kCapture)]: false
    },
    _callWrite: [Function: callWrite3Args],
    _readable: DestroyableTransform {
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _transformState: [TransformState],
      _destroyed: false,
      _transform: [Function: process],
      [Symbol(kCapture)]: false
    },
    _lastReadCallback: null,
    pipe: [Function (anonymous)],
    addListener: [Function: addListener],
    on: [Function: addListener],
    pause: [Function (anonymous)],
    resume: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  server: EventEmitter {
    _events: [Object: null prototype] {
      clientConnected: [Array],
      ready: [Array],
      subscribed: [Function (anonymous)],
      unsubscribed: [Function (anonymous)],
      clientDisconnected: [Function (anonymous)],
      published: [Function (anonymous)]
    },
    _eventsCount: 6,
    _maxListeners: undefined,
    opts: {
      port: 1883,
      host: null,
      maxConnections: 10000000,
      backend: [Object],
      stats: false,
      publishNewClient: true,
      publishClientDisconnect: true,
      publishSubscriptions: true,
      maxInflightMessages: 1024,
      onQoS2publish: 'noack',
      logger: [Object]
    },
    modernOpts: {
      host: null,
      backend: [Object],
      stats: false,
      publishNewClient: true,
      publishClientDisconnect: true,
      publishSubscriptions: true,
      maxInflightMessages: 1024,
      onQoS2publish: 'noack',
      logger: [Object],
      interfaces: [Array]
    },
    _dedupId: 0,
    clients: { easyio38D13502A352: [Circular *1], easyio38D13502A348: [Client] },
    closed: false,
    logger: EventEmitter {
      stream: [WriteStream],
      serializers: [Object],
      stringify: [Function],
      end: ',"v":1}\n',
      name: 'mosca',
      timestamp: true,
      slowtime: false,
      chindings: '',
      cache: null,
      formatOpts: [Object],
      _levelVal: 40,
      fatal: [Function: LOG],
      error: [Function: LOG],
      warn: [Function: LOG],
      info: [Function: noop],
      debug: [Function: noop],
      trace: [Function: noop],
      _baseLog: '{"pid":16460,"hostname":"WINDOWS-4CQJNB6","name":"mosca",',
      time: [Function: getTime]
    },
    onQoS2publish: 'noack',
    id: 'kGOfpNx',
    servers: [ [Server] ],
    ascoltatore: EventEmitter {
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: 0,
      _separator: '/',
      _wildcardOne: '+',
      _wildcardSome: '#',
      _nativeSettings: {},
      publish: [Function: newPublish],
      pub: [Function: newPublish],
      _ready: true,
      _closed: false,
      _matcher: [Qlobber],
      [Symbol(kCapture)]: false
    },
    persistence: null,
    [Symbol(kCapture)]: false
  },
  logger: EventEmitter {
    stream: WriteStream {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      columns: 120,
      rows: 30,
      _type: 'tty',
      fd: 1,
      _isStdio: true,
      destroySoon: [Function: destroy],
      _destroy: [Function: dummyDestroy],
      [Symbol(asyncId)]: 4,
      [Symbol(kHandle)]: [TTY],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    serializers: {
      client: [Function: clientSerializer],
      packet: [Function: packetSerializer],
      req: [Function: asReqValue],
      res: [Function: asResValue]
    },
    stringify: <ref *2> [Function: stringify] { default: [Circular *2] },
    end: ',"v":1}\n',
    name: 'mosca',
    timestamp: true,
    slowtime: false,
    chindings: ',"client":"easyio38D13502A352"',
    cache: null,
    formatOpts: { lowres: true },
    _levelVal: 40,
    fatal: [Function: LOG],
    error: [Function: LOG],
    warn: [Function: LOG],
    info: [Function: noop],
    debug: [Function: noop],
    trace: [Function: noop],
    _baseLog: '{"pid":16460,"hostname":"WINDOWS-4CQJNB6","name":"mosca",',
    time: [Function: getTime]
  },
  subscriptions: {},
  nextId: 1,
  inflight: {},
  inflightCounter: 0,
  _lastDedupId: -1,
  _closed: false,
  _closing: false,
  forward: [Function (anonymous)],
  id: 'easyio38D13502A352',
  keepalive: 60,
  will: undefined,
  clean: true,
  timer: Retimer {
    _started: 320501492,
    _rescheduled: 90000,
    _scheduled: 90000,
    _args: [],
    _timer: Timeout {
      _idleTimeout: 90000,
      _idlePrev: [Timeout],
      _idleNext: [TimersList],
      _idleStart: 1987,
      _onTimeout: [Function: timerWrapper],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(asyncId)]: 16,
      [Symbol(triggerId)]: 12
    }
  }
}